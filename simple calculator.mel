global proc float[] Calculator(float $numbers[], string $operation)
{
    float $return[1] = {0};
    
    if ($operation == "add")
        $return[0] = addFloats($numbers);
    else if ($operation == "subtract")
        $return[0] = subFloats($numbers);
    else if ($operation == "multiply")
        $return[0] = multFloats($numbers);
    else if ($operation == "divide")
        $return[0] = divFloats($numbers);
    else if ($operation == "modulo")
        $return[0] = modFloats($numbers);
    else if ($operation == "power")
        $return[0] = powFloats($numbers);
    else if ($operation == "mean")
        $return[0] = meanFloats($numbers);
    else if ($operation == "median")
        $return[0] = medianFloats($numbers);
    else if ($operation == "mode")
        $return = modeFloats($numbers);
    return $return;
};

global proc float addFloats(float $arr[])
{
    float $c;
    string $opString = "";
    for($i = 0; $i < size($arr); $i++)
    {
        $c += $arr[$i];
        if($opString == "")
        {
            $opString = $arr[$i];
        }
        else
        {
            $opString = $opString + " + " + $arr[$i];
        }
    }
    
    $opString = $opString + " = " + $c;
    print($opString);
    return $c;
};

global proc float subFloats(float $arr[])
{
    float $c;
    string $opString = "";
    for($i = 0; $i < size($arr); $i++)
    {
        if($opString == "")
        {
            $c = $arr[$i];
            $opString = $arr[$i];
        }
        else
        {
            $c -= $arr[$i];
            $opString = $opString + " - " + $arr[$i];
        }
    }
    
    $opString = $opString + " = " + $c;
    print($opString);
    return $c;
};

global proc float multFloats(float $arr[])
{
    float $c;
    string $opString = "";
    for($i = 0; $i < size($arr); $i++)
    {
        if($opString == "")
        {
            $c = $arr[$i];
            $opString = $arr[$i];
        }
        else
        {
            $c *= $arr[$i];
            $opString = $opString + " * " + $arr[$i];
        }
    }
    
    $opString = $opString + " = " + $c;
    print($opString);
    return $c;
};

global proc float divFloats(float $arr[])
{
    float $c;
    string $opString = "";
    for($i = 0; $i < size($arr); $i++)
    {
        if($opString == "")
        {
            $c = $arr[$i];
            $opString = $arr[$i];
        }
        else
        {
            $c /= $arr[$i];
            $opString = $opString + " / " + $arr[$i];
        }
    }  
    
    $opString = $opString + " = " + $c;
    print($opString);
    return $c;
};

global proc float modFloats(float $arr[])
{
    float $c;
    string $opString = "";
    for($i = 0; $i < size($arr); $i++)
    {
        if($opString == "")
        {
            $c = $arr[$i];
            $opString = $arr[$i];
        }
        else
        {
            $c %= $arr[$i];
            $opString = $opString + " mod " + $arr[$i];
        }
    }
    
    $opString = $opString + " = " + $c;
    print($opString);
    return $c;
};

global proc float powFloats(float $arr[])
{
    float $c = $arr[0];
    string $opString = $arr[0];
    for($i = 1; $i < size($arr); $i++)
    {
        for($ii = 1; $ii < $arr[$i]; $ii++)
        {
            $c *= $arr[$i - 1];
        }
        $opString = $opString + " to the power of " + $arr[$i];
        $arr[$i] = $c;
    }
    
    $opString = $opString + " equals " + $c;
    print($opString);
    return $c;
};

global proc float meanFloats(float $arr[])
{
    float $c = 0;
    // Step through values and sum them up
    for($i = 0; $i < size($arr); $i++)
    {
        $c += $arr[$i];
    }
    // Divide by the number of values to get the mean
    $c /= size($arr);
    print("The mean of the data set is " + $c);
    return $c;
};

global proc float medianFloats(float $arr[])
{
    float $c;
    $arr = `sort $arr`;
    // Check whether there are an even or odd number of values
    if (size($arr) % 2 == 0)
    {
        // If it's even, get the two center values and average them
        int $middleLeft = (size($arr)/2) - 1;
        float $leftValue = $arr[$middleLeft];
        int $middleRight = (size($arr)/2);
        float $rightValue = $arr[$middleRight];
        int $middle = ($leftValue + $rightValue)/2;
        $c = $middle;
    } else
    {
        // If it's odd, return the center value
        int $middle = size($arr)/2;
        $c = $arr[$middle];
    }
    print("The median of the data set is " + $c);
    return $c;
};

global proc float[] modeFloats(float $arr[])
{
    // Initialize the return variable
    float $mode[1] = {0};
    // Find the greatest value within the input array
    $arr = `sort $arr`;
    float $maxValue = $arr[size($arr) -1];
    // Initialize the auxiliary array
    float $freqArr[1];
    
    // Use the aux array to create an index from 0 to the maximum value
    for ($i = 0; $i < $maxValue; $i++)
    {
        $freqArr[size($freqArr)] = 0;
    }
    
    // Count how often each value occurs in the input array
    for($i = 0; $i < size($arr); $i++)
    {
        int $indexNum = $arr[$i];
        $freqArr[$indexNum] += 1;
    }
    
    // Find which value in the aux array occurs the most
    float $highVal = 0;
    for($i = 0; $i < size($freqArr); $i++)
    {
        if ($freqArr[$i] > $highVal)
        {
            $highVal = $freqArr[$i];
        }
    }
    
    // Populate the return array with all values that occur the highest number of times
    int $highValIndex = 0;
    for($i = 0; $i < size($freqArr); $i++)
    {
        if ($freqArr[$i] == $highVal)
        {
            $mode[$highValIndex] = $i;
            $highValIndex++;
        }
    }
    
    // Return the array (Works for multimodal data sets)
    
    if (size($mode) > 1)
    {
        string $opString = "This data set is multimodal. The modes are ";
        for($i = 0; $i < size($mode); $i++)
        {
            $opString = $opString + $mode[$i] + ", ";
        }
        print($opString);
    }
    else
    {
        print("The mode of this data set is " + $mode[0]);
    }
    
    return $mode;
};